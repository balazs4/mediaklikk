services:
  onlinestream:
    restart: unless-stopped
    image: node:alpine
    entrypoint: /bin/sh
    tty: true
    command:
      - -c
      - |
        node --no-warnings -e "
        require('http')
          .createServer((req, res) => {
            process.stdout.write(req.method + ' ' +  req.url);
            const term = req.url.replace('/', '');
            fetch('https://onlinestream.live/?search=' + term)
              .then((res) => res.text())
              .then((html) => {
                const m3u8 = [...html.match(/href=\"\/play.m3u8.*?\"/g)].map((h) =>
                  h.replace('href=\"', '').replace('m3u8\"', 'm3u8')
                );

                return Promise.all(
                  m3u8.map((m) =>
                    fetch('https://onlinestream.live' + m)
                      .then((res) => res.text())
                      .then((text) => {
                        return text.split('\n').filter((l) => l.startsWith('https'));
                      })
                  )
                );
              })
              .then((result) => {
                const { length, [length - 1]: last } = result.flat();
                process.stdout.write(' 307 ' + last + '\n');
                res.writeHead(307, { Location: last }).end();
              })
              .catch((err) => {
                process.stdout.write(' 500 ' + err.message + '\n');
                res.writeHead(500, { 'x-error': true }).end(err.message);
              });
          })
          .listen(process.env.PORT || 80, () => console.log('server is running'));
          "

  nginx:
    restart: unless-stopped
    image: nginx:alpine
    ports:
      - '3000:80'
    entrypoint: /bin/sh
    command:
      - -c
      - |
        mkdir -p /_

        tee /_/index.html << EOF >/dev/null
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <title>onlinestream</title>
          <style>
          body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
            line-height: 1.6;
            color: #111;
            padding: 4rem;
            max-width: 1920px;
            background: #fafafa;
          }

          main {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
          }


          a {
            text-transform: uppercase;
            margin: 1rem;
            height: 2rem;
            width: 8rem;
            padding: 2rem;
            text-align: center;
            color: #fff;
            background-color: #777;
            border: 1px solid #333;
            text-decoration: none;
            font-size: 1.2rem;
            font-weight: bold;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
          }
          a:hover,
          a:active,
          a:focus {
            box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),
              0 10px 10px rgba(0, 0, 0, 0.22);
          }

          </style>
        </head>
        <body>
        <main>
        EOF

        channels="m1 m4 dunaworld rtlklub rtl2 rtlgold cool fem3 hirtv"

        for ch in `echo $$channels`
        do
        tee -a /_/index.html << EOF >/dev/null
        <a href="/tv/$$ch">$$ch</a>
        EOF
        done

        tee -a /_/index.html << EOF >/dev/null
        </main>
        </body>
        </html>
        EOF

        tee /etc/nginx/nginx.conf << EOF > /dev/null
        user  nginx;
        worker_processes  auto;

        error_log  /var/log/nginx/error.log notice;
        pid        /var/run/nginx.pid;

        events {
            worker_connections  1024;
        }

        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;

            log_format  main  '\$$remote_addr - \$$remote_user [\$$time_local] "\$$request" '
                              '\$$status \$$body_bytes_sent "\$$http_referer" '
                              '"\$$http_user_agent" "\$$http_x_forwarded_for"';

            access_log  /var/log/nginx/access.log  main;
            sendfile        on;
            keepalive_timeout  65;
            gzip  on;

            proxy_cache_path /var/cache/nginx/tv keys_zone=tvcache:10m max_size=1g;

            server {
              listen  80;

              location /tv/ {
                proxy_cache tvcache;
                proxy_cache_valid 307 5m;
                proxy_pass http://onlinestream/;
              }

              location / {
                root   /_;
                index  index.html;
              }
            }
        }
        EOF

        nginx -t && nginx -g 'daemon off;'

